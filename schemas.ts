
import * as coda from "@codahq/packs-sdk";

export const AccountSchema = coda.makeObjectSchema({
  properties: {
    id: { type:coda.ValueType.String },
    account_number: { type:coda.ValueType.String },
    status: { type:coda.ValueType.String },
    crypto_status: { type:coda.ValueType.String },
    currency: { type:coda.ValueType.String },
    buying_power: { type:coda.ValueType.String },
    regt_buying_power: { type:coda.ValueType.String },
    daytrading_buying_power: { type:coda.ValueType.String },
    non_marginable_buying_power: { type:coda.ValueType.String },
    cash: { type:coda.ValueType.String },
    accrued_fees: { type:coda.ValueType.String },
    pending_transfer_in: { type:coda.ValueType.String },
    portfolio_value: { type:coda.ValueType.String },
    pattern_day_trader: { type:coda.ValueType.Boolean },
    trading_blocked: { type:coda.ValueType.Boolean },
    transfers_blocked: { type:coda.ValueType.Boolean },
    account_blocked: { type:coda.ValueType.Boolean },
    created_at: { type:coda.ValueType.String },
    trade_suspended_by_user: { type:coda.ValueType.Boolean },
    multiplier: { type:coda.ValueType.String },
    shorting_enabled: { type:coda.ValueType.Boolean },
    equity: { type:coda.ValueType.String },
    last_equity: { type:coda.ValueType.String },
    long_market_value: { type:coda.ValueType.String },
    short_market_value: { type:coda.ValueType.String },
    initial_margin: { type:coda.ValueType.String },
    maintenance_margin: { type:coda.ValueType.String },
    last_maintenance_margin: { type:coda.ValueType.String },
    sma: { type:coda.ValueType.String },
    daytrade_count: { type:coda.ValueType.Number },
  },
  displayProperty: "account_number",
  idProperty: "id",
  featuredProperties: ["status", "crypto_status", "currency", "cash"],
});

export const PositionSchema = coda.makeObjectSchema({
  properties: {
    asset_id: { type: coda.ValueType.String },
    symbol: { type: coda.ValueType.String },
    exchange: { type: coda.ValueType.String },
    asset_class: { type: coda.ValueType.String },
    asset_marginable: { type: coda.ValueType.Boolean },
    qty: { type: coda.ValueType.String },
    avg_entry_price: { type: coda.ValueType.String },
    side: { type: coda.ValueType.String },
    market_value: { type: coda.ValueType.String },
    cost_basis: { type: coda.ValueType.String },
    unrealized_pl: { type: coda.ValueType.String },
    unrealized_plpc: { type: coda.ValueType.String },
    unrealized_intraday_pl: { type: coda.ValueType.String },
    unrealized_intraday_plpc: { type: coda.ValueType.String },
    current_price: { type: coda.ValueType.String },
    lastday_price: { type: coda.ValueType.String },
    change_today: { type: coda.ValueType.String },
    qty_available: { type: coda.ValueType.String },
  },
  displayProperty: "symbol",
  idProperty: "asset_id",
  featuredProperties: ["exchange", "qty", "market_value", "current_price"],
});

export const AssetSchema = coda.makeObjectSchema({
  properties: {
    id: { type: coda.ValueType.String },
    class: { type: coda.ValueType.String },
    exchange: { type: coda.ValueType.String },
    symbol: { type: coda.ValueType.String },
    name: { type: coda.ValueType.String },
    status: { type: coda.ValueType.String },
    tradable: { type: coda.ValueType.Boolean },
    marginable: { type: coda.ValueType.Boolean },
    shortable: { type: coda.ValueType.Boolean },
    easy_to_borrow: { type: coda.ValueType.Boolean },
    fractionable: { type: coda.ValueType.Boolean },
  },
  displayProperty: "name",
  idProperty: "id",
  featuredProperties: ["symbol", "status", "tradable", "marginable", "shortable"],
});

export const OrderSchema = coda.makeObjectSchema({
  properties: {
    id: { type: coda.ValueType.String },
    client_order_id: { type: coda.ValueType.String },
    created_at: { type: coda.ValueType.String },
    updated_at: { type: coda.ValueType.String },
    submitted_at: { type: coda.ValueType.String },
    filled_at: { type: coda.ValueType.String },
    expired_at: { type: coda.ValueType.String },
    canceled_at: { type: coda.ValueType.String },
    failed_at: { type: coda.ValueType.String },
    replaced_at: { type: coda.ValueType.String },
    replaced_by: { type: coda.ValueType.String },
    replaces: { type: coda.ValueType.String },
    asset_id: { type: coda.ValueType.String },
    symbol: { type: coda.ValueType.String },
    asset_class: { type: coda.ValueType.String },
    notional: { type: coda.ValueType.String },
    qty: { type: coda.ValueType.String },
    filled_qty: { type: coda.ValueType.String },
    filled_avg_price: { type: coda.ValueType.String },
    order_class: { type: coda.ValueType.String },
    order_type: { type: coda.ValueType.String },
    type: { type: coda.ValueType.String },
    side: { type: coda.ValueType.String },
    time_in_force: { type: coda.ValueType.String },
    limit_price: { type: coda.ValueType.String },
    stop_price: { type: coda.ValueType.String },
    status: { type: coda.ValueType.String },
    extended_hours: { type: coda.ValueType.Boolean },
    legs: { type: coda.ValueType.String },
    trail_percent: { type: coda.ValueType.String },
    trail_price: { type: coda.ValueType.String },
    hwm: { type: coda.ValueType.String },
    subtag: { type: coda.ValueType.String },
    source: { type: coda.ValueType.String },
  },
  displayProperty: "symbol",
  idProperty: "id",
  featuredProperties: ["client_order_id", "created_at", "submitted_at", "asset_id", "qty", "status"],
});

